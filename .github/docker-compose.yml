# =============================================================================
# Docker Compose file for testing on Go versions 1.22 to the latest.
# =============================================================================
# It is recommended to run specifying a specific Go version and not at once.
#
# Since the service `tidy` will update/re-write the "go.mod" file to the latest
# version, during it's process the "go.mod" file will be gone temporarily. Thus,
# it will cause failure in the other container because of missing "go.mod" file.
#
# - Recommended usage:
#     $ docker compose --file ./.github/docker-compose.yml run latest
# - To update go.mod:
#     $ docker compose --file ./.github/docker-compose.yml run tidy
# - NOT recommended to run all tests at once whith "up":
#     $ docker compose --file ./.github/docker-compose.yml up

volumes:
  GO_PKG_MOD:

services:
  # Service tidy updates the go.mod to the latest
  tidy:
    build:
      context: ..
      dockerfile: ./.github/Dockerfile
      args:
        VARIANT: 1.22-alpine
    volumes:
      - ..:/workspaces
    entrypoint: [ "./.github/run_go_mod_tidy.sh" ]
  # Service min runs the tests on minimum Go version
  min:
    build:
      context: ..
      dockerfile: ./.github/Dockerfile
      args:
        VARIANT: 1.22-alpine
    volumes:
      - ..:/workspaces
      - GO_PKG_MOD:/go/pkg/mod
  # Service latest runs the tests on latest Go docker image
  latest:
    build:
      context: ..
      dockerfile: ./.github/Dockerfile
      args:
        VARIANT: alpine
    volumes:
      - ..:/workspaces
      - GO_PKG_MOD:/go/pkg/mod
  # Compatibility test with PHP
  php:
    build:
      context: ..
      dockerfile: ./_tests/Dockerfile_php
    volumes:
      - ../_tests/main.php:/workspaces/main.php
  # Compatibility test with Python3
  python:
    build:
      context: ..
      dockerfile: ./_tests/Dockerfile_py
    volumes:
      - ../_tests/main.py:/workspaces/main.py
  # Compatibility test with C (not the clang compiler)
  clang:
    build:
      context: ..
      dockerfile: ./_tests/Dockerfile_clang
    volumes:
      - ../_tests/main.sh:/workspaces/main.sh
